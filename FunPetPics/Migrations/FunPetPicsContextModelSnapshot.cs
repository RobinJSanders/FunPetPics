// <auto-generated />
using System;
using FunPetPics.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FunPetPics.Migrations
{
    [DbContext(typeof(FunPetPicsContext))]
    partial class FunPetPicsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FunPetPics.Models.PetPhotoModel", b =>
                {
                    b.Property<int>("PetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UserModelUserId")
                        .HasColumnType("int");

                    b.HasKey("PetID");

                    b.HasIndex("UserModelUserId");

                    b.ToTable("PetPhotos");
                });

            modelBuilder.Entity("FunPetPics.Models.RatingModel", b =>
                {
                    b.Property<int>("RaitngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AwsomenessRating")
                        .HasColumnType("int");

                    b.Property<int>("CutenessRating")
                        .HasColumnType("int");

                    b.Property<int>("FunynessRating")
                        .HasColumnType("int");

                    b.Property<int>("PetID")
                        .HasColumnType("int");

                    b.Property<int?>("PetPhotoModelPetID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("UserModelUserId")
                        .HasColumnType("int");

                    b.HasKey("RaitngId");

                    b.HasIndex("PetPhotoModelPetID");

                    b.HasIndex("UserModelUserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("FunPetPics.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FunPetPics.Models.PetPhotoModel", b =>
                {
                    b.HasOne("FunPetPics.Models.UserModel", null)
                        .WithMany("Uploads")
                        .HasForeignKey("UserModelUserId");
                });

            modelBuilder.Entity("FunPetPics.Models.RatingModel", b =>
                {
                    b.HasOne("FunPetPics.Models.PetPhotoModel", null)
                        .WithMany("Ratings")
                        .HasForeignKey("PetPhotoModelPetID");

                    b.HasOne("FunPetPics.Models.UserModel", null)
                        .WithMany("Ratings")
                        .HasForeignKey("UserModelUserId");
                });

            modelBuilder.Entity("FunPetPics.Models.PetPhotoModel", b =>
                {
                    b.Navigation("Ratings");
                });

            modelBuilder.Entity("FunPetPics.Models.UserModel", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("Uploads");
                });
#pragma warning restore 612, 618
        }
    }
}
